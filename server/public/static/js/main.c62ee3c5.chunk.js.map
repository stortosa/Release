{"version":3,"sources":["service/Services.js","components/auth/Login.js","components/auth/Signup.js","components/auth/Profile.js","components/Navbar.js","components/user-calm.js","components/goals/AddGoal.js","components/goals/Goals.js","components/Record.js","App.js","serviceWorker.js","index.js"],"names":["require","config","AuthServices","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","logout","get","loggedin","userCalms","withCredentials","userGoals","removeGoal","goalId","delete","axios","create","baseURL","process","Login","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","getUser","history","push","catch","setState","objectSpread","error","handleChange","_event$target","target","name","value","defineProperty","logged","_this2","react_default","a","createElement","className","onSubmit","type","onChange","e","react_router_dom","to","Component","withRouter","Signup","Profile","handleLogout","services","onClick","Navbar","userInSession","UserCalm","title","description","user","loggedInUser","responsefromApi","cloneallCamls","toConsumableArray","allCalms","unshift","console","log","getUserCalms","toggleForm","isShowing","showAddCalmForm","_this3","map","calm","key","_id","AddGoal","cloneallGoals","allGoals","getUserGoals","deleteGoal","goal_id","x","showAddGoalForm","AuthService","goal","demo","status","_this$state","audioProps","audioType","audioSrc","startCallback","pauseCallback","stopCallback","window","URL","createObjectURL","lib","controlAudio","App","getTheUser","userObj","Fragment","components_Navbar","react_router","exact","path","render","auth_Profile","assign","user_calm_UserCalm","paht","AddGoal_AddGoal","Record_demo","Signup_Signup","auth_Login","Boolean","location","hostname","match","ReactDOM","src_App_0","router","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c62ee3c5.chunk.js","sourcesContent":["import axios from 'axios';\r\nrequire ('dotenv').config();\r\n\r\n//ARCHIVO QUE CONECTA EL FRONT CON EL BACK\r\n\r\nexport default class AuthServices {\r\n  constructor() {\r\n    this.service = axios.create({\r\n      baseURL:  process.env.REACT_APP_URL,   //'http://localhost:5000/auth',\r\n      withCredentials: true\r\n    })\r\n  }\r\n\r\n  signup = (username, password) => {\r\n    return this.service.post('/signup', { username, password })\r\n      .then(response => response.data)\r\n  }\r\n\r\n  login = (username, password) => {\r\n    return this.service.post('/login', { username, password })\r\n      .then(response => response.data)\r\n\r\n  }\r\n\r\n  logout = () => {\r\n    return this.service.get('/logout')\r\n      .then(response => response.data)\r\n  }\r\n\r\n  loggedin = () => {\r\n    return this.service.get('/currentUser')   // o poner ('/loggedin') /currentUser\r\n      .then(response => response.data)\r\n  }\r\n\r\n\r\n\r\n  // addCalms = () => {\r\n  //   return this.service.post('/addCalms', { withCredentials: true})\r\n  //   .then(response => response.data )\r\n  // }\r\n\r\n  userCalms = () => {\r\n    return this.service.get('/userCalms', { withCredentials: true})  //addCalms  o userCalms\r\n    .then(response => response.data )\r\n  }\r\n\r\n  userGoals = () =>{\r\n    return this.service.get('/userGoals')\r\n    .then(response => response.data )\r\n  }\r\n\r\n  removeGoal = (goalId) =>{\r\n    return this.service.delete('/removeGoal', {data: {goalId:goalId }})\r\n    .then(response => response.data)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport AuthServices from '../../service/Services';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// Redirect\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '', logged: false, error: '' };\r\n    this.service = new AuthServices();\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n    this.service.login(username, password)\r\n      .then(response => {\r\n        this.props.getUser(response)\r\n        this.props.history.push(\"/profile\")\r\n        // this.setState({ ...this.state, error: false });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          ...this.state,\r\n          error: true\r\n        });\r\n      })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Please, login to our site</h3>\r\n        <div className=\"loginBox\">\r\n          <h2>Login</h2>\r\n          <form className=\"\" onSubmit={this.handleFormSubmit}>\r\n            <fieldset>\r\n              <label>Username:</label>\r\n              <input type=\"text\" name=\"username\" onChange={e => this.handleChange(e)} />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <label>Password:</label>\r\n              <input type=\"password\" name=\"password\" onChange={e => this.handleChange(e)} />\r\n            </fieldset>\r\n\r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form>\r\n        </div>\r\n        <h1>{this.state.error ? 'Error' : ''}</h1>\r\n\r\n        <p>Don't have account?\r\n            <Link to={\"/signup\"}> Signup</Link>\r\n        </p>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Login);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport AuthServices from '../../service/Services';\r\n\r\nexport default class Signup extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', password: '' };\r\n    this.service = new AuthServices();\r\n  }\r\n\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n\r\n    this.service.signup(username, password)\r\n      .then(response => {\r\n        this.setState({\r\n          username: \"\",\r\n          password: \"\",\r\n        });\r\n        this.props.getUser(response)\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          username: username,\r\n          password: password,\r\n          error: true\r\n        });\r\n      })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Signup</h2>\r\n        <form onSubmit={this.handleFormSubmit}>\r\n          <fieldset>\r\n            <label>Username:</label>\r\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\r\n          </fieldset>\r\n\r\n          <input type=\"submit\" value=\"Signup\" />\r\n        </form>\r\n\r\n        <h1>{this.state.error ? 'Error' : ''}</h1>\r\n\r\n        <p>Already have account?\r\n          <Link to={\"/login\"}> Login</Link>\r\n        </p>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport AuthServices from '../../service/Services';\r\n// import { Switch, Route, withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n    this.services = new AuthServices()\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n    this.props.logout(e)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h2>SONRIE</h2>\r\n        <h3>Lista</h3>\r\n        <ul>\r\n          <li>\r\n            xxxxxxx          </li>\r\n          <li>\r\n            yyyyyyy          </li>\r\n          <li>\r\n            zzzzzzz          </li>\r\n        </ul>\r\n\r\n        <Link to=\"/calm\" className=\"\">Calm</Link>\r\n        <Link to=\"/AddGoal\" className=\"\">Add Goal</Link>\r\n        <Link to=\"/fear\" className=\"\">Fear</Link>\r\n        <Link to=\"/addRecord\" className=\"\">Record</Link>\r\n\r\n        {/* <Link to=\"/happiness\" className=\"\">Happiness</Link>\r\n        <Link to=\"/rage\" className=\"\">Rage</Link>\r\n        <Link to=\"/sadness\" className=\"\">Sadness</Link> */}\r\n\r\n        <button onClick={this.handleLogout}>Logout</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n\r\n  handleLogout = (e) => {\r\n    this.props.logout(e)\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userInSession) {\r\n      return (\r\n        <nav className=\"nav-style\">\r\n          <button onClick={this.handleLogout}>Logout</button>\r\n          <h2>Welcome, {this.props.userInSession.username}</h2>\r\n        </nav>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <nav className=\"nav-style\">\r\n            <ul>\r\n              <li><Link to='/signup'>Signup</Link></li>\r\n              <li><Link to='/login'>Login</Link></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AuthServices from '../service/Services'\r\n\r\nexport default class UserCalm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      isShowing: false,\r\n      loggedInUser: null,\r\n      allCalms: []\r\n    };\r\n    this.service = new AuthServices();\r\n\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const title = this.state.title;\r\n    const description = this.state.description;\r\n    const user = this.state.loggedInUser\r\n\r\n    axios.post(\"http://localhost:5000/auth/addCalms\", { title, description, user })\r\n      .then((responsefromApi) => {\r\n\r\n        let cloneallCamls = [...this.state.allCalms];\r\n\r\n        cloneallCamls.unshift(responsefromApi.data)  //unshift o push\r\n        console.log(responsefromApi)\r\n        this.setState({\r\n          ...this.state,\r\n          allCalms: cloneallCamls,\r\n\r\n        })\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  getUserCalms = () => {\r\n    this.service.userCalms()\r\n      .then(response => {\r\n        console.log(response)\r\n        this.setState({\r\n          ...this.state,\r\n          allCalms: response,\r\n        })\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.service.loggedin()\r\n      .then(response => {\r\n        this.setState({\r\n          loggedInUser: response\r\n        })\r\n      })\r\n    this.getUserCalms()\r\n\r\n    // console.log(this.state.loggedInUser)\r\n  }\r\n\r\n  onChange = (event) => {\r\n    // console.log(this)\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  toggleForm = () => {\r\n    if (!this.state.isShowing) {\r\n      this.setState({ isShowing: true });\r\n    } else {\r\n      this.setState({ isShowing: false });\r\n    }\r\n  }\r\n\r\n  showAddCalmForm = () => {\r\n    if (this.state.isShowing) {\r\n      return (\r\n        <div>\r\n          <h3>Add Calm</h3>\r\n          <form className=\"\" onSubmit={this.onSubmit}>\r\n            <label>Title:</label>\r\n            <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.onChange(e)} />\r\n            <label>Description:</label>\r\n            <textarea name=\"description\" value={this.state.description} onChange={e => this.onChange(e)} />\r\n\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Welcome to Calm</h1>\r\n        <hr />\r\n        <button onClick={() => this.toggleForm()}> Add Calm </button>\r\n        {this.showAddCalmForm()}\r\n\r\n        <ol className=\"calms-list\">\r\n          {\r\n            this.state.allCalms.map(calm =>\r\n              <li key={calm._id}>\r\n                {calm.title}--{calm.description}\r\n              </li>\r\n            )\r\n          }\r\n        </ol>\r\n        {/* <div>\r\n          {this.state.allCalms.map((calm, idx) => (\r\n            <ul key={idx}>\r\n              <li>{calm.title}</li>\r\n              <li>{calm.description}</li>\r\n            </ul>\r\n\r\n          ))}\r\n        </div> */}\r\n        <h1>DON´T FORGET IT</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AuthService from '../../service/Services'\r\nimport Goals from './Goals';\r\n\r\nexport default class AddGoal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      isShowing: false,\r\n      loggedInUser: null,\r\n      allGoals: []\r\n    };\r\n    this.service = new AuthService();\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const title = this.state.title;\r\n    const description = this.state.description;\r\n    const user = this.state.loggedInUser\r\n\r\n    axios.post(\"http://localhost:5000/auth/addGoals\", { title, description, user })\r\n      .then((responsefromApi) => {\r\n\r\n        let cloneallGoals = [...this.state.allGoals];\r\n\r\n        cloneallGoals.unshift(responsefromApi.data)  //unshift o push\r\n        console.log(responsefromApi)\r\n        this.setState({\r\n          ...this.state,\r\n          allGoals: cloneallGoals,\r\n\r\n        })\r\n        // this.setState({ title: cloneallGoals.data.title, description: cloneallGoals.data.description });\r\n      })\r\n      .catch(error => console.log(error))\r\n      this.getUserGoals()\r\n  }\r\n\r\n  getUserGoals = () => {\r\n    this.service.userGoals()\r\n      .then(response => {\r\n        console.log(response)\r\n        this.setState({\r\n          ...this.state,\r\n          allGoals: response,\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.service.loggedin()\r\n      .then(response => {\r\n        this.setState({\r\n          loggedInUser: response\r\n        })\r\n      })\r\n    this.getUserGoals()\r\n    // console.log(this.state.loggedInUser)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // console.log(this)\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  toggleForm = () => {\r\n    if (!this.state.isShowing) {\r\n      this.setState({ isShowing: true });\r\n    } else {\r\n      this.setState({ isShowing: false });\r\n    }\r\n  }\r\n\r\n  deleteGoal = (e, goal_id) =>{\r\n    e.preventDefault();\r\n    this.service.removeGoal(goal_id)\r\n    .then(x =>{\r\n      // this.setState({\r\n      //   ...this.state,\r\n      // })\r\n    })\r\n    this.getUserGoals()\r\n  }\r\n  showAddGoalForm = () => {\r\n    if (this.state.isShowing) {\r\n      return (\r\n        <div>\r\n          <h3>Add Goal</h3>\r\n          <form onSubmit={this.handleFormSubmit}>\r\n            <label>Title:</label>\r\n            <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChange(e)} />\r\n            \r\n            {/* <label>Favourite Color:</label>\r\n            <textarea name=\"color\" value={this.state.color} onChange={e => this.handleChange(e)} /> */}\r\n\r\n            <label>Description:</label>\r\n            <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChange(e)} />\r\n\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <button onClick={() => this.toggleForm()}> Add Goal </button>\r\n        {this.showAddGoalForm()}\r\n\r\n        <ol className=\"goals-list\">\r\n          {\r\n            this.state.allGoals.map(goal =>\r\n              <li key ={goal._id}>\r\n                {goal.title}--{goal.description}\r\n                <button onClick={e => this.deleteGoal(e, goal._id)}> Delete</button>\r\n              </li>\r\n            )\r\n          }\r\n        </ol>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport goalsServices from '../../service/goalsServices';\r\n\r\nexport default class Goals extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { listOfGoals: [] };\r\n    this.service = new goalsServices();\r\n\r\n  }\r\n\r\n  getAllGoals = () => {\r\n    axios.get(`http://localhost:5000/all`)\r\n\r\n      .then(responseFromApi => {\r\n\r\n        this.setState({\r\n          listOfGoals: responseFromApi.data\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllGoals();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\n// import \"./index.css\";\r\nimport AudioAnalyser from \"react-audio-analyser\"\r\n\r\n\r\nexport default class demo extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      status: null\r\n    }\r\n  }\r\n\r\n  controlAudio(status) {\r\n    this.setState({\r\n      status\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { status, audioSrc } = this.state;\r\n    const audioProps = {\r\n      audioType: \"audio/wav\", // supported audio/wav,audio/mp3, default audio/webm\r\n      status, // Triggering component updates by changing status\r\n      audioSrc,\r\n      startCallback: (e) => {\r\n        console.log(\"succ start\", e)\r\n      },\r\n      pauseCallback: (e) => {\r\n        console.log(\"succ pause\", e)\r\n      },\r\n      stopCallback: (e) => {\r\n        this.setState({\r\n          audioSrc: window.URL.createObjectURL(e)\r\n        })\r\n        console.log(\"succ stop\", e)\r\n      }\r\n    }\r\n    return (\r\n      <AudioAnalyser {...audioProps}>\r\n        <div className=\"btn-box\">\r\n          {status !== \"recording\" &&\r\n            <i className=\"iconfont icon-start\" title=\"开始\"\r\n              onClick={() => this.controlAudio(\"recording\")}></i>}\r\n          {status === \"recording\" &&\r\n            <i className=\"iconfont icon-pause\" title=\"暂停\"\r\n              onClick={() => this.controlAudio(\"paused\")}></i>}\r\n          <i className=\"iconfont icon-stop\" title=\"停止\"\r\n            onClick={() => this.controlAudio(\"inactive\")}></i>\r\n        </div>\r\n      </AudioAnalyser>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Profile from './components/auth/Profile';\nimport AuthServices from './service/Services';\nimport Navbar from './components/Navbar';\nimport UserCalm from './components/user-calm';\nimport AddGoal from './components/goals/AddGoal';\nimport Record from './components/Record';\n// import Fear from './components/emotions/fear/Fear';\n// import Happiness from './components/emotions/happiness/Happiness';\n// import Rage from './components/emotions/rage/Rage';\n// import Sadness from './components/emotions/sadness/Sadness'\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: null,\n    }\n    this.service = new AuthServices();\n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      ...this.state,\n      loggedInUser: userObj\n    })\n  }\n\n  logout = (e) => {\n    e.preventDefault();\n    this.service.logout()\n      .then(() => {\n        this.props.history.push('/login')\n        this.setState({\n          ...this.state,\n          loggedInUser: null\n        })\n      })\n  }\n\n  render() {\n    // this.fetchUser()\n\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              {/* aqui simplemente se muestra un lorem ipsum genérico para que veáis contenidos que solo se muestran a usuarios logeados */}\n              <Switch>\n                <Route exact path='/profile' render={() => <Profile logout={this.logout} {...this.state.loggedInUser} />} />\n                <Route exact path='/calm' render={() => <UserCalm logout={this.logout} {...this.state.loggedInUser} />} />\n                <Route exact paht='/addGoal' render={() => <AddGoal logout={this.logout} {...this.state.loggedInUser} />} />\n                <Route exact paht='/demo' render={() => <Record logout={this.logout} {...this.state.loggedInUser} />} />\n\n                {/* <Route exact path='/fear' render={() => <Fear logout={this.logout} />} />\n                <Route exact path='/happiness' render={() => <Happiness logout={this.logout} />} />\n                <Route exact path='/rage' render={() => <Rage logout={this.logout} />} />\n                <Route exact path='/sadness' render={() => <Sadness logout={this.logout} />} /> */}\n\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser} />} />\n                <Route exact path='/login' render={() => <Login getUser={this.getTheUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App router={Router} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}