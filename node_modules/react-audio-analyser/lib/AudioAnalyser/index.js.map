{"version":3,"sources":["../../src/component/AudioAnalyser/index.js"],"names":["React","Component","PropTypes","MediaRecorder","RenderCanvas","AudioAnalyser","prevProps","props","status","event","inactive","stopAudio","recording","startAudio","paused","pauseAudio","children","className","audioSrc","renderCanvas","defaultProps","backgroundColor","strokeColor","audioBitsPerSecond","mimeType","audioType","audioOptions","width","height","propTypes","string","number","object","timeslice","startCallback","func","pauseCallback","stopCallback","onRecordCallback"],"mappings":";;;;;;;;;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA;;;IAKMC,a,GAFLF,a,UACAC,Y;;;;;;;;;;;2CAGsBE,S,EAAW;AAC1B,gBAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsBF,UAAUE,MAApC,EAA4C;AACxC,oBAAMC,QAAQ;AACVC,8BAAU,KAAKC,SADL;AAEVC,+BAAW,KAAKC,UAFN;AAGVC,4BAAQ,KAAKC;AAHH,kBAIZ,KAAKR,KAAL,CAAWC,MAJC,CAAd;AAKAC,yBAASA,OAAT;AACH;AACJ;;;iCAEQ;AAAA,yBAGD,KAAKF,KAHJ;AAAA,gBAEDS,QAFC,UAEDA,QAFC;AAAA,gBAESC,SAFT,UAESA,SAFT;AAAA,gBAEoBC,QAFpB,UAEoBA,QAFpB;;AAIL,mBACI;AAAA;AAAA,kBAAK,WAAWD,SAAhB;AACI;AAAA;AAAA;AACK,yBAAKE,YAAL;AADL,iBADJ;AAIKH,wBAJL;AAMQE,4BACA;AAAA;AAAA;AACI,mDAAO,cAAP,EAAgB,KAAKA,QAArB;AADJ;AAPR,aADJ;AAcH;;;;EA/BuBjB,S;;AAkC5BI,cAAce,YAAd,GAA6B;AACzBZ,YAAQ,EADiB;AAEzBU,cAAU,EAFe;AAGzBG,qBAAiB,kBAHQ;AAIzBC,iBAAa,SAJY;AAKzBL,eAAW,gBALc;AAMzBM,wBAAoB,MANK;AAOzBC,cAAU,YAPe;AAQzBC,eAAW,YARc;AASzBC,kBAAc,EATW;AAUzBC,WAAO,GAVkB;AAWzBC,YAAQ;AAXiB,CAA7B;AAaAvB,cAAcwB,SAAd,GAA0B;AACtBrB,YAAQN,UAAU4B,MADI;AAEtBZ,cAAUhB,UAAU4B,MAFE;AAGtBT,qBAAiBnB,UAAU4B,MAHL;AAItBR,iBAAapB,UAAU4B,MAJD;AAKtBb,eAAWf,UAAU4B,MALC;AAMtBP,wBAAoBrB,UAAU6B,MANR;AAOtBN,eAAWvB,UAAU4B,MAPC;AAQtBJ,kBAAcxB,UAAU8B,MARF;AAStBL,WAAOzB,UAAU6B,MATK;AAUtBH,YAAQ1B,UAAU6B,MAVI;AAWtBE,eAAW/B,UAAU6B,MAXC;AAYtBG,mBAAehC,UAAUiC,IAZH;AAatBC,mBAAelC,UAAUiC,IAbH;AActBE,kBAAcnC,UAAUiC,IAdF;AAetBG,sBAAkBpC,UAAUiC;AAfN,CAA1B;;AAkBA,eAAe9B,aAAf","file":"index.js","sourcesContent":["/**\r\n * Created by j_bleach on 2018/8/1.\r\n */\r\nimport React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MediaRecorder from \"./MediaRecorder\";\r\nimport RenderCanvas from \"./RenderCanvas\";\r\n// import \"./index.css\";\r\n\r\n\r\n@MediaRecorder\r\n@RenderCanvas\r\nclass AudioAnalyser extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.status !== prevProps.status) {\r\n            const event = {\r\n                inactive: this.stopAudio,\r\n                recording: this.startAudio,\r\n                paused: this.pauseAudio\r\n            }[this.props.status];\r\n            event && event();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            children, className, audioSrc\r\n        } = this.props;\r\n        return (\r\n            <div className={className}>\r\n                <div>\r\n                    {this.renderCanvas()}\r\n                </div>\r\n                {children}\r\n                {\r\n                    audioSrc &&\r\n                    <div>\r\n                        <audio controls src={audioSrc}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAudioAnalyser.defaultProps = {\r\n    status: \"\",\r\n    audioSrc: \"\",\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n    strokeColor: \"#ffffff\",\r\n    className: \"audioContainer\",\r\n    audioBitsPerSecond: 128000,\r\n    mimeType: \"audio/webm\",\r\n    audioType: \"audio/webm\",\r\n    audioOptions: {},\r\n    width: 500,\r\n    height: 100\r\n};\r\nAudioAnalyser.propTypes = {\r\n    status: PropTypes.string,\r\n    audioSrc: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    strokeColor: PropTypes.string,\r\n    className: PropTypes.string,\r\n    audioBitsPerSecond: PropTypes.number,\r\n    audioType: PropTypes.string,\r\n    audioOptions: PropTypes.object,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    timeslice: PropTypes.number,\r\n    startCallback: PropTypes.func,\r\n    pauseCallback: PropTypes.func,\r\n    stopCallback: PropTypes.func,\r\n    onRecordCallback: PropTypes.func\r\n};\r\n\r\nexport default AudioAnalyser;\r\n\r\n"]}