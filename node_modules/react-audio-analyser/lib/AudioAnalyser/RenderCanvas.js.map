{"version":3,"sources":["../../src/component/AudioAnalyser/RenderCanvas.js"],"names":["React","RenderCanvas","renderCurve","props","height","width","RenderCanvasClass","animationId","window","requestAnimationFrame","bufferLength","analyser","fftSize","dataArray","Uint8Array","getByteTimeDomainData","configCanvas","sliceWidth","Number","x","i","v","y","canvasCtx","lineTo","stroke","initCanvas","cancelAnimationFrame","backgroundColor","strokeColor","canvas","canvasRef","current","getContext","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","Target","createRef"],"mappings":"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","file":"RenderCanvas.js","sourcesContent":["/**\r\n * Created by j_bleach on 2018/8/6.\r\n */\r\nimport React from \"react\";\r\n\r\nconst RenderCanvas = Target => {\r\n    return class RenderCanvasClass extends Target {\r\n        static canvasRef = React.createRef(); // react ref\r\n        static canvasCtx = null; // canvas 上下文\r\n        static animationId = null;\r\n\r\n        componentDidMount() {\r\n            this.initCanvas();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            window.cancelAnimationFrame(RenderCanvasClass.animationId); //组件销毁前，注销定时动画\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe canvas 配置\r\n         */\r\n        configCanvas() {\r\n            const {height, width, backgroundColor, strokeColor} = this.props;\r\n            const canvas = RenderCanvasClass.canvasRef.current;\r\n            RenderCanvasClass.canvasCtx = canvas.getContext(\"2d\");\r\n            RenderCanvasClass.canvasCtx.clearRect(0, 0, width, height);\r\n            RenderCanvasClass.canvasCtx.fillStyle = backgroundColor;\r\n            RenderCanvasClass.canvasCtx.fillRect(0, 0, width, height);\r\n            RenderCanvasClass.canvasCtx.lineWidth = 2;\r\n            RenderCanvasClass.canvasCtx.strokeStyle = strokeColor;\r\n            RenderCanvasClass.canvasCtx.beginPath();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 画布初始化,停止动画\r\n         */\r\n        initCanvas() {\r\n            window.cancelAnimationFrame(RenderCanvasClass.animationId);\r\n            const {height, width} = this.props;\r\n            this.configCanvas();\r\n            RenderCanvasClass.canvasCtx.moveTo(0, height / 2);\r\n            RenderCanvasClass.canvasCtx.lineTo(width, height / 2);\r\n            RenderCanvasClass.canvasCtx.stroke();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 动态绘制音频曲线\r\n         */\r\n        renderCurve = () => {\r\n            const {height, width} = this.props;\r\n            RenderCanvasClass.animationId = window.requestAnimationFrame(this.renderCurve); // 定时动画\r\n            const bufferLength = this.analyser.fftSize; // 默认为2048\r\n            const dataArray = new Uint8Array(bufferLength);\r\n            this.analyser.getByteTimeDomainData(dataArray);// 将音频信息存储在长度为2048（默认）的类型数组（dataArray）\r\n            this.configCanvas();\r\n            const sliceWidth = Number(width) / bufferLength;\r\n            let x = 0;\r\n            for (let i = 0; i < bufferLength; i++) {\r\n                const v = dataArray[i] / 128.0;\r\n                const y = v * height / 2;\r\n                RenderCanvasClass.canvasCtx[i === 0 ? \"moveTo\" : \"lineTo\"](x, y);\r\n                x += sliceWidth;\r\n            }\r\n            RenderCanvasClass.canvasCtx.lineTo(width, height / 2);\r\n            RenderCanvasClass.canvasCtx.stroke();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 初始化渲染canvas节点\r\n         */\r\n        renderCanvas() {\r\n            const {height, width} = this.props;\r\n            return <canvas ref={RenderCanvasClass.canvasRef} height={height} width={width}\r\n                           style={{width: width, height: height}}/>\r\n        }\r\n    }\r\n}\r\nexport default RenderCanvas;"]}